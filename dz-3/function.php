<?php
echo "<h1>Задачки по функция </h1>";

/* 1.	Сделайте функцию, которая возвращает куб числа. Число передается параметром. */
echo "<p>Задача 1</p>";

function blackSabbath ($a) {
    return $a ** 2;
}
echo blackSabbath(6);

/* 2.	Сделайте функцию, которая возвращает сумму двух чисел. Числа передаются ей первым и вторым параметром. */
echo "<p>Задача 2</p>";

function pinkFloyd ($a, $b) {
    return $a + $b;
}
echo pinkFloyd(2, 6);

/* 3.	Сделайте функцию, которая отнимает от первого числа второе и делит на третье */
echo "<p>Задача 3</p>";

function theDoors ($a, $b, $c) {
    return ($a - $b) / $c;
}
echo theDoors(12, 2, 5);

/* 4.	Сделайте функцию, которая на вход принимает параметр в виде массива, разворачивает массив и возвращает результат. */
echo "<p>Задача 4</p>";

function ironMaiden($a) {
    return var_dump($a);
}
$arr = [1,2,3,4,5,6];
echo ironMaiden($arr);

/* 5.	Сделайте функцию, которая принимает параметром число и проверяет четное оно или нет. */
echo "<p>Задача 5</p>";

function theScorpions ($a) {
    if($a % 2 != 0) {
        echo 'Это число не четное';
    }
    else {
        echo 'Это число четное';
    }
}
echo theScorpions(7);

/* 6.	Сделайте функцию, которая принимает параметром массив, а возвращает массив из четных элементов этого массива */
echo "<p>Задача 6</p>";

function theRollingStons ($arr = []) {
    foreach ($arr as $v) {
        if($v % 2 == 0) {
            $arr2[] = $v;
        }
    }
    return $arr2;
}

$arrEven = [rand(1,100),rand(1,100),rand(1,100),rand(1,100),rand(1,100)];
var_dump(theRollingStons($arrEven));

/*7.	Сделайте функцию, которая принимает параметром строку,
а возвращает первые N символов этой строки (N – это второй параметр).
Функция должна добавлять троеточие в конце возвращаемой строки. */
echo "<p>Задача 7</p>";

$text = 'какой то текст';
function LedZeppelin ($a, $n) {
    if(mb_strlen($a) < $n) {
        echo 'У нас нет столько букв';
    }
    else {
        echo mb_substr($a,0,$n) . '...';
    }
}
LedZeppelin($text, 3);

/* 8.	Напишите функцию, которая в качестве параметра принимает массив, меняет у него ключи со значениями.
Например $arr = array(‘php’ => ‘PHP’, ‘java’ => ‘Java’);
А результатом будет array(‘PHP’ => ‘php’, ‘Java’ => ‘java’). */
echo "<p>Задача 8</p>";

$arr3 = array ('слон' => 'большой', 'волк' => 'голодный', 'мяч' => 'круглый');
print_r($arr3);
echo '<br>';
//function changeArr ($qwe) {
//    $rty = array_flip($qwe);
//    var_dump($rty);
//}
//changeArr($arr3); // первое решение с функцией

function changeArr ($a = []) {
    $b = [];
    foreach ($a as $k => $v) {
        $b[$v] = $k;
    }
    print_r($b);
}
echo changeArr($arr3); // второе решение нашел сам (случайно) xD

/* 9.	Напишите функцию, которая будет считать сумму цифр числа переданного пользователем в функцию.
Например: есть число 123, то программа должна вычислить сумму цифр 1, 2, 3, т. е. 6.
Также функция должна сделать проверку на корректность введения данных пользователем (т.е. число больше нуля. не пустая строка,
не равно null). */
echo "<p>Задача 9</p>";

$int = '567467';
function Genesis ($int) {
    $ert = 0;
    if(empty($int)) {
        echo 'Данные пустые';
    }
    else {
        for ($i = 0; $i < strlen($int); $i++) {
            $ert += $int{$i};
        }
    }
    return $ert; // проверку на null я не смог проверить только на пустое значеие, нужно пояснение
}
echo Genesis($int);

/* 10.	Напишите функцию, которая возвращает число длиной $length
($length - это параметр функции, который отвечает за длину числа). */
echo "<p>Задача 10</p>";

function theMuse ($length) {
    $qwe = '';
    for ($i = 0; $i < $length; $i++) {
        $qwe .= rand(0, 9);
    }
    return $qwe;
}

echo theMuse(20);

/* 11.	На основании предыдущей задачи необходимо написать функцию,
которая принимает два параметра: первый - это число,
которое возвращает функция в задаче №10 ($x), второй параметр - это любое ваше число ($y).
Функция должна подсчитать количество вхождений $y в числе $x. Например: цифра 5 в числе 442158755745 встречается 4 раза. */
echo "<p>Задача 11</p>";

function GorkyPark ($x, $y) {
    $qwe = '';
    $count = 0;
    for ($i = 0; $i < $x; $i++) {
        $qwe .= rand(0, 9);
    }
    for ($i = 0; $i < mb_strlen($qwe); $i++) {
        if ($y == $qwe{$i}) {
            $count++;
        }
    }
    return  "в этой переменной есть $x значное число ($qwe), в котором $y попадается $count раза";
}
echo GorkyPark(20, 0);

/* 12.	Написать функцию, которая возвращает массив длиной $length,
заполненный случайными числами (можно воспользоваться функцией rand). */
echo "<p>Задача 12</p>";

function redHotChiliPeppers ($length) {
    $arra = [];
    for ($i = 0; $i < $length; $i++) {
        $arra[] = rand (1, 20);
    }
    return var_dump($arra);
}

redHotChiliPeppers(10);

/* 13.	Написать функцию, которая в качестве параметра принимает массив из задачи №12.
Функция находит максимальное и минимальное значение массива и меняет их местами. */
echo "<p>Задача 13</p>";

function DeepPurple ($length)
{
    $arra = [];
    for ($i = 0; $i < $length; $i++) {
        $arra[] = rand(1, 20);
    }
    $min = min($arra);
    $max = max($arra);
    foreach ($arra as $k => $v) {
        if ($v == $max) {
            $arra[$k] = $min;
        }
        if ($v == $min) {
            $arra[$k] = $max;
        }
    }
    return var_dump($arra);
}
DeepPurple(10);

/* 14.	Написать функцию, которая в качестве параметра принимает натуральное число n.
Вычислить: 11 + 22 + .. + nn. Вывести на экран квадраты этих чисел, а также сумму квадратов этих чисел. */
echo "<p>Задача 14</p>";

function Queen ($n) {
    $sum = 0;
    $count = 0;
    for ($i = 0; $i < $n; $i++) {
        $count++;
        $sum += $count ** 2;
    }
    return $sum;
}

echo Queen(5);

?>
<style>
    h1 {
        color: darkblue;
    }
    p {
        color: darkorange;
    }
</style>
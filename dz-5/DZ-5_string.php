<?php
echo '<h1>Работа над строками</h1>';

/* 1. Дана строка 'Привет, мир!'. Сделайте из нее строку 'ПРИВЕТ МИР!'. */
echo "<p>Задача 1</p>";

$q = 'Hello, world!';
$w = strtoupper($q);
echo $w;

/* 2. Дана строка 'PHP'. Сделайте из нее строку 'php'. */
echo "<p>Задача 2</p>";

$q = 'PHP';
$w = strtolower($q);
echo $w;

/* 3. Дана строка 'москва'. Сделайте из нее строку 'Москва'. */
echo "<p>Задача 3</p>";
$q = 'moscow';
$w = ucfirst($q);
echo $w;

/*4. Дана строка 'МОСКВА'. Сделайте из нее строку 'Москва'. */
echo "<p>Задача 4</p>";
$q = 'MOSCOW';
echo $q . '<br>';
$w = strtolower($q);
echo $w . '<br>';
$e = ucfirst($w);
echo  $e;

/* 5. Дана строка 'иванов иван иванович'. Сделайте из нее строку 'Иванов Иван Иванович'. */
echo "<p>Задача 5</p>";

$q = 'lobunko evgenii olegovich';
$w = ucwords($q);
echo $w;

/*6. Дана строка 'я учу PHP!'. Найдите количество символов в этой строке. */
echo "<p>Задача 6</p>";

$q = 'я учу PHP!';

echo mb_strlen($q);

/* 7. Дана строка 'я учу PHP!'. Вырежьте из нее слово 'учу' и слово 'PHP'. */
echo "<p>Задача 7</p>";

$q = 'я учу PHP!';
echo mb_substr($q, 2, 3) . '<br>';
echo mb_substr($q ,-4);

/* 8. Дана переменная $str, в которой хранится какой-либо текст.
Реализуйте обрезание длинного текста по следующему принципу:
если количество символов этого текста больше заданного в переменной $n,
то в переменную $result запишем первые $n символов строки $str и добавим в конец многоточие
'...'. В противном случае в переменную $result запишем содержимое переменной $str. */
echo "<p>Задача 8</p>";

$str = 'A fool thinks himself to be wise, but a wise man knows himself to be a fool.';
$count = strlen($str);
$n = rand(1,100);
echo 'Обрезать на ' . $n . ' символов' . '<br>';
if($n < $count) {
    $result = substr($str,0, $n) . '...';
}
else {
    $result = $str;
}
echo $result;

/* 9. Напишите функцию, которая генерирует пароль.
Функция должна принимать параметр.
Параметр должен задавать количество символов в пароле. */
echo "<p>Задача 9</p>";

function password ($n) {
    $chars = 'abcdefhiknrstyzABDEFGHKNQRSTYZ1234567890';
    $count = strlen($chars);
    $str = '';
    for($i = 0; $i < $n; $i++) {
        $str .= substr($chars, rand(1, $count)-1, 1);
    }
    return $str;
}
$password = password(rand(1,20));
echo $password;

/* 10. Создайте переменную $password.
Присвойте переменной $password результат функции из предыдущего примера.
Если количество символов пароля больше 5-ти и меньше 10-ти, то выведите пользователю сообщение о том,
что пароль подходит, иначе сообщение о том, что нужно придумать другой пароль. */
echo "<p>Задача 10</p>";

$count = strlen($password);
echo 'Пароль длинной ' . $count . ' символов - ' . $password . '<br>';
if($count >= 5 && $count <= 10) {
    echo 'Ваш пароль отлично подходит!';
}
else {
    echo 'Ваш пароль должен быть не меньше 5 символов и не больше 10, проверте правильность ввода пароля';
}

/*
11. Нарисуйте пирамиду, как показано на рисунке,
только у вашей пирамиды должно столько рядов,
чтобы последний элемент пирамидки состоял из одного символа.
Первый ряд пирамиды должен хранится в переменной $str (может иметь различное количество символов).
Подсказка: воспользуйтесь функциями strlen и substr.
xxxxxxxxxx
xxxxxxxxx
xxxxxxxx
xxxxxxx
xxxxxx      */
echo "<p>Задача 11</p>";

$str = 'x';
$n = rand(2, 10);
for($i = 0; $i < $n; $i++) {
    $str .= 'x';
}
echo $str . '<br>';
$count = strlen($str);

for($i = $count-1; $i > 0; $i--) {
    echo substr($str, 0, $i) . '<br>';
}

/* 12. Дана строка 'Я-учу-PHP!'. Замените все дефисы на тег '<br>'. */
echo "<p>Задача 12</p>";

$q = 'i-learn-PHP!';
echo str_replace('-', '<br>', $q);

/* 13. Дана строка '31.12.2013'. Замените все точки на дефисы. */
echo "<p>Задача 13</p>";

$q = '31.12.2013';
echo str_replace('.', '-', $q);

/* 14. Дана строка $str.
Замените смайлики ':)', ':(', '^-^',
которые встречаются в этой строке на соответсвующие картинки (<img src=''>). */
echo "<p>Задача 14</p>";

$str =  ':) :( ^-^';
echo $str . '<br>';

$arr1 = array(':)', ':(', '^-^');

$arr2 = array(
    'картинка один',
    'картинка два',
    'картинка три'
);

echo str_replace($arr1, $arr2, $str);

/* 15. Дана переменная $str, в которой хранится строка русского текста.
Напишите скрипт, который запишет транслит этого текста в переменную $translit.
Напишите также скрипт, который выполнит обратную операцию. */
echo "<p>Задача 15</p>";

$str = 'Очень прикольная функция';

$rus =  ['А', 'Б', 'В', 'Г', 'Д','Е', 'Ё', 'Ж', 'З', 'И', 'Й',
		'К', 'Л', 'М', 'Н', 'О', 'П', 'Р', 'С', 'Т', 'У', 'Ф',
		'Х', 'Ц', 'Ч', 'Ш', 'Щ', 'Ъ', 'Ы', 'Ь', 'Э', 'Ю', 'Я',
		'а', 'б', 'в', 'г', 'д', 'е', 'ё', 'ж', 'з', 'и', 'й',
		'к', 'л', 'м', 'н', 'о', 'п', 'р', 'с', 'т', 'у', 'ф',
		'х', 'ц', 'ч', 'ш', 'щ', 'ъ', 'ы', 'ь', 'э', 'ю', 'я'];
echo count($rus) . '<br>';
$eng = ['A', 'B', 'V', 'G', 'D', 'E', 'IO', 'ZH', 'Z', 'I', 'I',
        'K', 'L', 'M', 'N', 'O', 'P', 'R', 'S', 'T', 'U', 'F',
        'H', 'C', 'CH', 'SH', 'SH', '`', 'Y', '`', 'E', 'IU', 'IA',
        'a', 'b', 'v', 'g', 'd', 'e', 'io', 'zh', 'z', 'i', 'i',
        'k', 'l', 'm', 'n', 'o', 'p', 'r', 's', 't', 'u', 'f',
        'h', 'c', 'ch', 'sh', 'sh', '`', 'y', '`', 'e', 'iu', 'ia'];
echo count($eng) . '<br>';

echo str_replace($rus, $eng, $str);

/* 16. Дана строка 'я учу PHP!'.
С помощью функции explode запишите каждое слово этой строки в отдельный элемент массива. */
echo "<p>Задача 16</p>";

$str = 'я учу PHP!';

print_r(explode(' ', $str));


/* 17. Дан массив с элементами 'html', 'css', 'php', 'js'.
С помощью функции implode создайте строку из этих элементов, разделенных запятыми. */
echo "<p>Задача 17</p>";

$qwe = ['html', 'css', 'php', 'js'];
echo implode(' ', $qwe);

/* 18. В переменной $date лежит дата в формате '2013-12-31'. Преобразуйте эту дату в формат '31.12.2013'. */
echo "<p>Задача 18</p>";

$r = '2013-12-31';

$arr = explode('-', $r);
echo "$arr[2]."."$arr[1]."."$arr[0]";

/* 19. В переменной $date лежит дата в формате '31.12.2013'. Преобразуйте эту дату в формат '2013-12-31'. */
echo "<p>Задача 19</p>";

$q = '31.12.2013';
$arr2 = explode('.', $q);
echo "$arr2[2]-"."$arr2[1]-"."$arr2[0]";

/* 20. Дана строка ' php '. Сделайте из нее 3 разных строки с помощью функций класса trim: 'php', ' php', 'php '. */
echo "<p>Задача 20</p>";

$w = ' php ';
echo '|' . $w . '|' . '<br>';
echo '|' . trim($w) . '|' . '<br>';
echo '|' . rtrim($w) . '|' . '<br>';
echo '|' . ltrim($w) . '|' . '<br>';

/* 21. Дана строка 'html, <b>php</b>, js'. Удалите теги из этой строки. */
echo "<p>Задача 21</p>";

$q = 'html, <b>php</b>, js';
echo $q . '<br>';
echo strip_tags($q);

/*22. Дана строка 'html, <b>php</b>, js'.
Выведите ее на экран 'как есть': то есть браузер не должен преобразовать <b> в жирный. */
echo "<p>Задача 22</p>";

$q = 'html, <b>php</b>, js';
echo htmlspecialchars($q);

/* 23. Узнайте код символов 'a', 'b', 'c', пробела. */
echo "<p>Задача 23</p>";

echo ord('a') . '<br>';
echo ord('b') . '<br>';
echo ord('c') . '<br>';
echo ord(' ') . '<br>';

/* 24. Изучите таблицу ASCII.
Определите границы, в которых располагаются буквы английского алфавита.
Выведите на экран символ с кодом 33. */
echo "<p>Задача 24</p>";

echo chr(33) . '<br>';
echo 'Граница латиницы начинается с 65 кода в таблице ASCII - ' . chr(65);

/* 25. Запишите в переменную $str случайный символ — большую букву латинского алфавита.
Подсказка: с помощью таблицы ASCII определите какие целые числа соответствуют большим буквам латинского алфавита. */
echo "<p>Задача 25</p>";

$q = chr(rand(65,90));
echo $q;

/*26. Запишите в переменную $str случайную строку $len длиной,
состоящую из маленьких букв латинского алфавита. Подсказка: воспользуйтесь циклом for или while. */
echo "<p>Задача 26</p>";

$len = rand(5,25);
$str = '';

for($i = 0 ; $i < $len; $i ++) {
    $str .= chr(rand(97,122));
}
echo $str;

/* 27. Дана строка 'Мама мыла раму'. Узнайте количество букв 'a' и 'м', входящих в эту строку.  */
echo "<p>Задача 27</p>";

$w = 'Мама мыла раму';
echo mb_substr_count($w , 'а') . '<br>';
echo mb_substr_count($w , 'м') . '<br>';

/*28. Скопируйте весь текст со страницы php.su, запишите его в переменную $str.
Подсчитайте количество символов и количество слов в даннной строке. */
echo "<p>Задача 28</p>";

$str = 'На протяжении XIV—XV веков, когда всё Бугско-Днестровское междуречье входило в состав сначала Литовского княжества, а позже Польского королевства, об острове Березани имеются только отрывистые сведения, а уже на рубеже XV—XVI веков остров оказался под властью Крымского ханства, однако не был заселён. В то же время запорожские казаки знали об острове и использовали его для стоянки судов и отдыха во время многочисленных морских походов[1]. Однако ни для казаков, ни для турков Березань не имела важного стратегического значения[2].Идея строительства оборонительных укреплений на острове Березань принадлежит инженерам российской армии. Об этом свидетельствует проект крепости на острове Адда, подписанный Николасом фон-Брадке 26 сентября 1737 года[* 1]. За несколько лет до этого турецкий посол в Российской империи Ахмед Ресми написал в Константинополь о необходимости срочно усилить крепость Кинбурн и Очаковские крепости, однако об острове Березань даже не вспомнил. Существует два объяснения, зачем России понадобилось строительство фортификационных сооружений на необитаемом острове: во-первых, из-за отсутствия военно-морского флота на Чёрном море создать преграды туркам для содержания своих больших линейных кораблей между Березанью и мысом Аджиякс (Хаджи-Гасан), а во-вторых, не исключено, что Россия надеялась удержать только Бугско-Днестровское междуречье и в таком случае новая крепость на Березани смогла бы определённым образом уравновесить наличие турецкого замка Кинбурн. После окончания русско-турецкой войны 1735—1739 годов, в результате которой России не удалось захватить земли в низовьях Днепра, на протяжении более как четверть века Березань не упоминается, а это означает, что она снова потеряла своё стратегическое значение';
echo str_word_count($str) . '<br>'; // кол-во слов в этой строке
echo mb_strlen($str) . '<br>'; // кол-во символов в строке с кирилицей
echo iconv_strlen($str) . '<br>'; // кол-во символов в строке
echo strlen($str) . '<br>'; // кол-во символов в строке с кирилицей

/* 29. Создайте массив гласных букв.
С помощью этого массива подсчитайте количество гласных в строке $str.
Результат представьте в виде ассоциативного массива, где ключами будут буквы, а элементами их количество. */
echo "<p>Задача 29</p>";

$arr = ['а', 'у', 'о', 'ы', 'и', 'э', 'я', 'ю', 'ё', 'е','А', 'У', 'О', 'Ы', 'И', 'Э', 'Я', 'Ю', 'Ё', 'Е'];
$aaa = [];
print_r($arr); echo '<br>';
foreach ($arr as $k => $v) {
    $aaa[$v] = mb_substr_count($str, $v);
}
print_r($aaa);

/*30. Дана строка '1234567890'. Разбейте ее на массив с элементами '12', '34', '56', '78', '90'. */
echo "<p>Задача 30</p>";

$w = '1234567890';

print_r($arr = str_split($w, 2));

/*31. Проверьте, является ли пара слов палиндромом
(одинаково читается во всех направлениях, кот-ток, нос-сон). */
echo "<p>Задача 31</p>";

$str = 'oko';
$revers  = strrev($str);
if ($revers == $str)
{
    echo $str. ' - это слово палиндром';
}
echo '<br>';
$str = 'bob';
$revers  = strrev($str);
if ($revers == $str)
{
    echo $str. ' - это слово палиндром';
}

/* 32. Дан массив $arr.
Найдите в нем все пары слов-палиндромов (одинаково читаются во всех направлениях, кот-ток, нос-сон).
Результат выводите в виде строка формата 'нос — сон'.
Проверьте работу скрипта на массиве $arr из примера. Совет: нужно сделать не один, а два цикла.
$arr = array('slon', 'nos', 'tok', 'tak', 'kot', 'pir', 'mir','son', 'rim') */
echo "<p>Задача 32</p>";

$arr = array('slon', 'nos', 'tok', 'tak', 'kot', 'pir', 'mir','son', 'rim');
foreach ($arr as $v1) {
    foreach ($arr as $v2) {
        if($v1 == strrev($v2)) {
            echo "$v1 - $v2" . '<br>';
        }
    }
}

/*33. Определите является ли фраза палиндромом.
Примеры: 'A roza upala na lapu Asora'.
Обратите внимание на то, что при обратном чтении игнорируются пробелы, запятые, дефисы,
тире и большие буквы
(подсказка: значит сначала нужно привести строку к стандартному виду — удалить лишние символы,
привести все к нижнему регистру). */
echo "<p>Задача 33</p>";

$str = 'A roza upala na lapu Asora';
$str = str_replace(' ', '', $str);
$str = strtolower($str);
echo $str . '<br>';
if ($str == strrev($str)) {
    echo $str . ' - это фраза палиндром';
}
else {
    echo strrev($str) . ' Эта фраза не полиндром, так как в ней сделали ошибку =)';
}

/*34. Нарисуйте пирамиду, как показано на рисунке, только у вашей пирамиды должно быть 9 рядов, а не 5.
Решите задачу с помощью одного цикла и функции str_repeat.

x
xx
xxx
xxxx
xxxxx  */
echo "<p>Задача 34</p>";

for($i = 0; $i <= 9; $i++) {
    echo str_repeat('x', $i) . '<br>';

}

/* 35. Нарисуйте пирамиду, как показано на рисунке,
только у вашей пирамиды должно быть 9 рядов, а не 5.
Решите задачу с помощью одного цикла и функции str_repeat.

1
22
333
4444
55555   */
echo "<p>Задача 35</p>";

for($i = 1; $i <= 9; $i++) {
    echo str_repeat($i, $i) . '<br>';
}

?>
<style>
    p {
        color: red;
    }
</style>